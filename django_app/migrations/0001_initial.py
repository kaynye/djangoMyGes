# Generated by Django 3.2.1 on 2021-05-05 13:27

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Classroom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('c_name', models.CharField(max_length=10, verbose_name='Nom de la classe')),
                ('c_promotion', models.IntegerField(default=2021, verbose_name='Année de la promotion')),
                ('c_student', models.ManyToManyField(to=settings.AUTH_USER_MODEL, verbose_name='Eleves de la classe')),
            ],
        ),
        migrations.CreateModel(
            name='Evenement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('e_name', models.CharField(max_length=255, verbose_name="Nom de l'evenement")),
                ('e_date_debut', models.DateTimeField(default=datetime.datetime(2021, 5, 5, 15, 27, 41, 630444), verbose_name='date de debut')),
                ('e_date_fin', models.DateTimeField(default=datetime.datetime(2021, 5, 5, 15, 27, 41, 630444), verbose_name='date de fin')),
                ('e_frequent', models.BooleanField(default=False, verbose_name='Arrive toute les semaines')),
                ('e_is_presenciel', models.BooleanField(default=True, verbose_name='Cours en presentiel')),
                ('e_commentaire', models.TextField(max_length=400, verbose_name='Detail')),
                ('e_class', models.ManyToManyField(to='django_app.Classroom', verbose_name="Classes de l'evenement")),
            ],
        ),
        migrations.CreateModel(
            name='Matiere',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('m_name', models.CharField(max_length=255, verbose_name='Nom de la matiere')),
                ('m_description', models.TextField(max_length=400, verbose_name='description')),
                ('m_coefficient', models.IntegerField(verbose_name='Coefficient de la matiere')),
                ('m_evenement', models.ManyToManyField(to='django_app.Evenement', verbose_name='Evenements')),
                ('m_profs', models.ManyToManyField(to=settings.AUTH_USER_MODEL, verbose_name='Prof de la matiére')),
            ],
        ),
        migrations.CreateModel(
            name='TypeNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tn_name', models.CharField(max_length=50, verbose_name='nom du type de cours')),
            ],
            options={
                'verbose_name': 'Type de note',
                'verbose_name_plural': 'Type de notes',
            },
        ),
        migrations.CreateModel(
            name='SupportDeCours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sdc_name', models.CharField(max_length=255, verbose_name='Nom du support')),
                ('sdc_file', models.FileField(blank=True, upload_to='', verbose_name='fichier')),
                ('e_proprietaire', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='proprietaire')),
                ('sdc_matiere', models.ManyToManyField(to='django_app.Matiere', verbose_name='Support de cours')),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('n_note', models.IntegerField(verbose_name='node')),
                ('n_eleve', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='e_note', to=settings.AUTH_USER_MODEL, verbose_name='Eleve')),
                ('n_matiere', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='m_note', to='django_app.matiere', verbose_name='Matiére')),
                ('n_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tn_note', to='django_app.typenote', verbose_name='type de cours')),
            ],
        ),
    ]
